[{"/Users/shivamarora/Desktop/notes_app/frontend/src/index.js":"1","/Users/shivamarora/Desktop/notes_app/frontend/src/App.js":"2","/Users/shivamarora/Desktop/notes_app/frontend/src/reportWebVitals.js":"3","/Users/shivamarora/Desktop/notes_app/frontend/src/components/Header.js":"4","/Users/shivamarora/Desktop/notes_app/frontend/src/pages/NotesListPage.js":"5","/Users/shivamarora/Desktop/notes_app/frontend/src/components/ListItem.js":"6","/Users/shivamarora/Desktop/notes_app/frontend/src/pages/NotePage.js":"7","/Users/shivamarora/Desktop/notes_app/frontend/src/components/AddButton.js":"8"},{"size":500,"mtime":1647846877173,"results":"9","hashOfConfig":"10"},{"size":603,"mtime":1647864524970,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1647788300116,"results":"12","hashOfConfig":"10"},{"size":177,"mtime":1647851349104,"results":"13","hashOfConfig":"10"},{"size":986,"mtime":1647860878499,"results":"14","hashOfConfig":"10"},{"size":989,"mtime":1647866308336,"results":"15","hashOfConfig":"10"},{"size":2619,"mtime":1647866151496,"results":"16","hashOfConfig":"10"},{"size":350,"mtime":1647860793741,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"18uva4j",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/shivamarora/Desktop/notes_app/frontend/src/index.js",[],[],["44","45"],"/Users/shivamarora/Desktop/notes_app/frontend/src/App.js",[],[],"/Users/shivamarora/Desktop/notes_app/frontend/src/reportWebVitals.js",[],[],"/Users/shivamarora/Desktop/notes_app/frontend/src/components/Header.js",[],[],"/Users/shivamarora/Desktop/notes_app/frontend/src/pages/NotesListPage.js",[],[],"/Users/shivamarora/Desktop/notes_app/frontend/src/components/ListItem.js",[],[],"/Users/shivamarora/Desktop/notes_app/frontend/src/pages/NotePage.js",["46","47"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nconst NotePage = () => {\n\n    let params = useParams()\n    let navigate = useNavigate()\n    let id = params.id //ID from the URL\n    let [note, setNote] = useState(null)\n    let csrftoken = Cookies.get('csrftoken')\n\n    const getNote = async () => {\n        if (id === 'new') return;\n        let response = await fetch(`/api/note/${id}`);\n        let data = await response.json()\n        setNote(data)\n    }\n\n    useEffect(() => {\n        getNote()\n    }, [setNote]);\n\n    let updateNote = async () => {\n        fetch(`/api/note/${id}/update`, {\n            method: \"PUT\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken\n            },\n            body: JSON.stringify(note)\n        })\n    }\n\n    let createNote = async () => {\n        fetch(`/api/notes/create`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken\n            },\n            body: JSON.stringify(note)\n        })\n    }\n\n    let deleteNote = async () => {\n        fetch(`/api/note/${id}/delete`, {\n            method: \"DELETE\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken\n            },\n        })\n        navigate('/')\n    }\n\n    let handleSubmit = () => {\n        if (id !== 'new' && note.body === '') {\n            deleteNote()\n        } else if (id !== 'new') {\n            updateNote()\n        } else if (id === 'new' && note !== null) {\n            createNote()\n        }\n        navigate('/')\n    }\n\n    let handleChange = (e) => {\n        setNote((prevState) => ({\n            ...prevState,\n            body: e.target.value,\n        }))\n    }\n\n    return (\n        <div className='note'>\n            <div className='note-header' onClick={handleSubmit}>\n                <h3> <ArrowLeft /> </h3>\n                {id !== 'new' ? (\n                    <button onClick={deleteNote}>Delete</button>\n                ) : (\n                    <button>Done</button>\n                )}\n\n            </div>\n            <textarea value={note?.body} onChange={handleChange}></textarea>\n        </div>\n    )\n}\n\nexport default NotePage","/Users/shivamarora/Desktop/notes_app/frontend/src/components/AddButton.js",[],[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":24,"column":8,"nodeType":"58","endLine":24,"endColumn":17,"suggestions":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [getNote, setNote]",{"range":"65","text":"66"},[709,718],"[getNote, setNote]"]