{"ast":null,"code":"var _jsxFileName = \"/Users/shivamarora/Desktop/notes_app/frontend/src/components/ListItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getTitle = note => {\n  let title = note.body.split('\\n')[0];\n\n  if (title.length > 45) {\n    return title.slice(0, 45);\n  }\n\n  return title;\n};\n\nconst ListItem = _ref => {\n  let {\n    note\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/note/${note.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", getTitle(note), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: note.updated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListItem;\nexport default ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["/Users/shivamarora/Desktop/notes_app/frontend/src/components/ListItem.js"],"names":["React","Link","getTitle","note","title","body","split","length","slice","ListItem","id","updated"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvB,MAAIC,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAZ;;AACA,MAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EAAuB;AACnB,WAAOH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAP;AACH;;AACD,SAAOJ,KAAP;AACH,CAND;;AASA,MAAMK,QAAQ,GAAG,QAAc;AAAA,MAAb;AAAEN,IAAAA;AAAF,GAAa;AAG3B,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,SAAQA,IAAI,CAACO,EAAG,EAA3B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAA,0BAAMR,QAAQ,CAACC,IAAD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAG;AAAA,sBAAOA,IAAI,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAbD;;KAAMF,Q;AAeN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst getTitle = (note) => {\n    let title = note.body.split('\\n')[0]\n    if (title.length > 45) {\n        return title.slice(0, 45)\n    }\n    return title\n}\n\n\nconst ListItem = ({ note }) => {\n\n\n    return (\n        <div>\n            <Link to={`/note/${note.id}`}>\n                <div className='notes-list-item'>\n                    <h3> {getTitle(note)} </h3>\n                    <p><span>{note.updated}</span></p>\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nexport default ListItem;"]},"metadata":{},"sourceType":"module"}